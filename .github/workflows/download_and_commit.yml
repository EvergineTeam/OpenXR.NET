name: Update_and_Commit
on:
  [push]
  #schedule:
  #- cron: '0 0 1 * *'

env:
  xrFile: ${{  'xr.xml'  }}
  xrTmpFile: ${{  'xr.xml_tmp'  }}
  xrPath: ${{  'KhronosRegistry'  }}
  xrUrl: ${{  'https://raw.githubusercontent.com/KhronosGroup/OpenXR-Docs/master/specification/registry/xr.xml'  }}
  xrSelfUrl: ${{  'https://raw.githubusercontent.com/WaveEngine/OpenXR.NET/main/KhronosRegistry/xr.xml'  }}
  nugetConfigPath: ${{ 'OpenXRGen/WaveEngine.Bindings.OpenXR/NuGet.config'  }}
  nugetOutputPath: ${{  'nupkgs'  }}

jobs:   
  download:
    runs-on: ubuntu-latest 
    outputs:
      output1: ${{ steps.xr.outputs.hash1 }}
      output2: ${{ steps.xr.outputs.hash2 }}
    steps:
      - name: download target file
        uses: carlosperate/download-file-action@v1.0.3
        with:
          # URL of the file to download
          file-url: ${{  env.xrUrl  }}
          file-name: ${{  env.xrFile  }}
      - name: download our file
        uses: carlosperate/download-file-action@v1.0.3
        with:
          # URL of the file to download
          file-url: ${{  env.xrSelfUrl  }}
          file-name: ${{  env.xrTmpFile  }}
      - name: Get hash from saved xr
        id: xr        
        run: |
          echo "::set-output name=hash1::${{ hashFiles('xr.xml')  }}"
          echo "::set-output name=hash2::${{ hashFiles('xr.xml_tmp')  }}"       
          
  build:
    needs: [download]    
    if: ${{ needs.download.outputs.output1 != needs.download.outputs.output2  }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.8.x'
      - name: Copy config path
        run: '"<configuration></configuration>" > ${{ env.nugetConfigPath  }}'     
      - name: download target file
        uses: carlosperate/download-file-action@v1.0.3
        with:
          # URL of the file to download
          file-url: ${{  env.xrUrl  }}
          file-name: ${{  env.xrTmpFile  }}          
          location: ${{ env.xrPath  }}/
      - name: Override files
        run: |
            cd ${{  env.xrPath  }}
            rm ${{  env.xrFile  }} 
            mv ${{  env.xrTmpFile  }}  ${{  env.xrFile  }}
            cat ${{  env.xrFile  }}
      - name: Generate NuGet packages      
        run: powershell ./Generate-NuGets.ps1 -Version  3.2.0${{  github.run_number  }}-preview -outputfolder ${{  env.nugetOutputPath  }}  
      - name: Commit if update
        if: ${{ success() }}
        uses: stefanzweifel/git-auto-commit-action@v4.11.0
        with:
          commit_message: Updating new xr file
          add_options: '-u'
      - uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: nuget
          path: ${{  env.nugetOutputPath  }}/
      - name: SendGrid Mail Action
        if: ${{ failure() }}
        uses: mmichailidis/sendgrid-mail-action@v1.1
        with:
          # The token for sendgrid
          sendgrid-token: sdgsdfgdfgsdfgsdfg
          # The emails ( can be only one ) that the email will go
          mail: mgomar@plainconcepts.com
          # The email that will be shown as sender
          from: waveengineteam@gmail.com
          # The subject of the email
          subject: Open XR has failed
          # Defines if it should be one email with multiple address or multiple emails with a single address
          individual: false
          # The body of the mail. The placeholders that can be used are $EVENT$, $ISSUE$, $ACTION$
          text: something when wrong
